// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array bits;

    /** Initializes the library. */
    function void init() {
        var int j;
        let bits = Array.new(16);
        let bits[0] = 1;
        while (j < 15) {
            let j = j + 1;
            let bits[j] = bits[j-1] + bits[j-1];
        }
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
     // I'm not handling negative numbers correctly.
    function int multiply(int x, int y) {
        var int sum, j, temp, neg;
        //if (((x < 0) & (y > 0)) | ((y < 0) & (x > 0))) {
        //    let neg = -1;
        //}
//
        //let x = Math.abs(x);
        //let y = Math.abs(y);

        if (x < y) {
            let temp = x;
            let x = y;
            let y = temp;
        }
        
        while (j < 16) {
        //while (j < 15) {
            if (bits[j] & y = bits[j]) {
                let sum = sum + x;
            }
            let x = x + x;
            let j = j + 1;
        }

        //if (neg = -1) {
        //    let sum = -sum;
        //}

        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int q, n, d;

        if (x < 0) {
            let n = -1;
        } else {
            let n = 1;
        }

        if (y < 0) {
            let d = -1;
        } else {
            let d = 1;
        }

        let x = Math.abs(x);
        let y = Math.abs(y);

        if (y > x) {
            return 0;
        } 
        
        let q = Math.divide(x, y + y);

        if (((x - Math.multiply(y, q+q)) < y)) {
            return (q + q) * n * d;
        } else {
            return ((q + q) + 1) * n * d;
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int j, temp, tempSquared, y;
        if (x < 0) {
            do Sys.error(4);
        } 

        let j = 7; 
        while (j > -1) {
            let temp = y + bits[j];
            let tempSquared = temp * temp;
            if (~(tempSquared > x) & ~(tempSquared < 0)) {
                let y = temp;    
            }
            let j = j - 1;
        }
        
        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if ((a-b) > 0) {
            return a;
        } else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if ((a-b) < 0) {
            return a;
        } else {
            return b;
        }
    }
}
