class
 
S
q
u
a
r
e
G
a
m
e
 
{
field
 
S
q
u
a
r
e
 
s
q
u
a
r
e
;
field
 
int
 
d
i
r
e
c
t
i
o
n
;
constructor
 
S
q
u
a
r
e
G
a
m
e
 
n
e
w
(
)
 
{
let
 
s
q
u
a
r
e
 
=
 
S
q
u
a
r
e
.
n
e
w
(
0
,
 
0
,
 
30
)
;
let
 
d
i
r
e
c
t
i
o
n
 
=
 
0
;
return
 
this
;
}
method
 
void
 
d
i
s
p
o
s
e
(
)
 
{
do
 
s
q
u
a
r
e
.
d
i
s
p
o
s
e
(
)
;
do
 
M
e
m
o
r
y
.
d
e
A
l
l
o
c
(
this
)
;
return
;
}
method
 
void
 
m
o
v
e
S
q
u
a
r
e
(
)
 
{
if
 
(
d
i
r
e
c
t
i
o
n
 
=
 
1
)
 
{
 
do
 
s
q
u
a
r
e
.
m
o
v
e
U
p
(
)
;
 
}
if
 
(
d
i
r
e
c
t
i
o
n
 
=
 
2
)
 
{
 
do
 
s
q
u
a
r
e
.
m
o
v
e
D
o
w
n
(
)
;
 
}
if
 
(
d
i
r
e
c
t
i
o
n
 
=
 
3
)
 
{
 
do
 
s
q
u
a
r
e
.
m
o
v
e
L
e
f
t
(
)
;
 
}
if
 
(
d
i
r
e
c
t
i
o
n
 
=
 
4
)
 
{
 
do
 
s
q
u
a
r
e
.
m
o
v
e
R
i
g
h
t
(
)
;
 
}
do
 
S
y
s
.
w
a
i
t
(
5
)
;
return
;
}
method
 
void
 
r
u
n
(
)
 
{
var
 
char
 
k
e
y
;
var
 
boolean
 
e
x
i
t
;
let
 
e
x
i
t
 
=
 
false
;
while
 
(
~
e
x
i
t
)
 
{
while
 
(
k
e
y
 
=
 
0
)
 
{
let
 
k
e
y
 
=
 
K
e
y
b
o
a
r
d
.
k
e
y
P
r
e
s
s
e
d
(
)
;
do
 
m
o
v
e
S
q
u
a
r
e
(
)
;
}
if
 
(
k
e
y
 
=
 
81
)
 
 
{
 
let
 
e
x
i
t
 
=
 
true
;
 
}
if
 
(
k
e
y
 
=
 
90
)
 
 
{
 
do
 
s
q
u
a
r
e
.
d
e
c
S
i
z
e
(
)
;
 
}
if
 
(
k
e
y
 
=
 
88
)
 
 
{
 
do
 
s
q
u
a
r
e
.
i
n
c
S
i
z
e
(
)
;
 
}
if
 
(
k
e
y
 
=
 
131
)
 
{
 
let
 
d
i
r
e
c
t
i
o
n
 
=
 
1
;
 
}
if
 
(
k
e
y
 
=
 
133
)
 
{
 
let
 
d
i
r
e
c
t
i
o
n
 
=
 
2
;
 
}
if
 
(
k
e
y
 
=
 
130
)
 
{
 
let
 
d
i
r
e
c
t
i
o
n
 
=
 
3
;
 
}
if
 
(
k
e
y
 
=
 
132
)
 
{
 
let
 
d
i
r
e
c
t
i
o
n
 
=
 
4
;
 
}
while
 
(
~
(
k
e
y
 
=
 
0
)
)
 
{
let
 
k
e
y
 
=
 
K
e
y
b
o
a
r
d
.
k
e
y
P
r
e
s
s
e
d
(
)
;
do
 
m
o
v
e
S
q
u
a
r
e
(
)
;
}
}
return
;
}
}
